%% Example for the usage of PartiMoDe_Interpol
% using outputs generated by the PartiMoDe_StEn model
% Author: Niklas Hohmann
% email: N.H.Hohmann (at) uu.nl , ORCID: https://orcid.org/0000-0003-1559-1838
%% Define Grid, Parameters of Surface Sediment Layer &  ODE Solver Options
% grid
timeMax=1;
depthMax=1;
timeSteps=100;
depthSteps=20;
times=linspace(0,timeMax,timeSteps);
depths=linspace(0,depthMax,depthSteps);
% parameters of surface sediment layer
sedRate=1;
bioDiffusion=0.1;
mixingDepth=0.95;
disintegrationRate=1;
bottomDisintegrationZone=0.5;
declineDisintegrationBelowZone=10;
surfaceInflux=0.1;
surfaceLossRate=0.1;
% ODE solver optinons
odeOptions = odeset('RelTol',1e-9,'AbsTol',1e-9);
% Default options are
% for 'RelTol': 1e-3,
% for 'AbsTol': 1e-6
% type "doc odeset" in command line or go to 
% https://www.mathworks.com/help/matlab/math/summary-of-ode-options.html
% for an overview of the available options

%% Define Coefficient Functions
% plots of coefficient functions are at the bottom of the file
M=@(x) bioDiffusion* (x<=mixingDepth);
S=@(x) sedRate;
L=@(x) min([disintegrationRate, exp(-declineDisintegrationBelowZone*(x-bottomDisintegrationZone))]);

meanInitialParticleDepth=0.5;   %mean depth of particles at t=0
sdInitialParticleLocation=0.05; %SD of particle depths at t=0
% location of particles at t=0 is determined by pdf of normal distribution
fZero=@(x) 1/(sdInitialParticleLocation*sqrt(2*pi))*exp(-0.5*((x-meanInitialParticleDepth)/sdInitialParticleLocation).^2);

%% Solve PDE
% plot of solution is at the bottom of the file
uSolution=PartiMoDe_StEn(times, depths, S, M, L, fZero, surfaceInflux, surfaceLossRate, odeOptions);

%% Define inputs for interpolation
originalDepths=depths;
atDepths=linspace(0,depthMax,500); % Define the (high-res) points where the solution of u should be interpolated
timeIndex=50; %
times(timeIndex) % time when the interpoaltion t
%% Interpolate values of u and dudx
[u,dudx]=PartiMoDe_Interpol(atDepths,uSolution,originalDepths,timeIndex);

%% Plot Interpolated Values
figure
plot(atDepths,u)
xlabel("Depth x")
ylabel("u(x,t)")
title(append("High Resolution Plot of u(x,t) at t = ", num2str(times(timeIndex))))

figure
plot(atDepths,dudx)
xlabel("Depth x")
ylabel("du/dx")
title(append("du(x,t)/dx at t = ", num2str(times(timeIndex))))

%% Plots of coefficient functions

figure
plot(times,arrayfun(M,times))
xlabel("Depth")
ylabel("Mixing M")
title("Mixing Intensity")
ylim([0,1.1*bioDiffusion])

figure
plot(times,arrayfun(L,times))
xlabel("Depth")
ylabel("Disintegration Rate L")
title("Disintegration Rate")
ylim([0,1.1*disintegrationRate])

figure
plot(times, arrayfun(fZero,times))
xlabel("Depth")
ylabel("Initial Condition f_0")
title("Initial Condition  (Particle Density at t=0 / Influx)")
ylim([0,1.1*max(arrayfun(fZero,times))])

figure
levels=[-0.01,10.^(-5:0.25:1)];
contourf(times,depths,uSolution,levels,'ShowText','On')
xlabel('Time t')
ylabel('Depth x')
title('u(x,t)')
set(gca, 'Ydir', 'reverse')
set(gca, 'YAxisLocation', 'Left')
set(gca, 'XAxisLocation', 'Top')

% close all
